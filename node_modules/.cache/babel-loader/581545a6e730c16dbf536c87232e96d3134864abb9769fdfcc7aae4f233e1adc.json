{"ast":null,"code":"import React,{useState,useEffect}from'react';import Login from'./components/Login';import TaskList from'./components/TaskList';import TaskForm from'./components/TaskForm';import{getFromStorage,saveToStorage,STORAGE_KEYS}from'./utils/localStorage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[tasks,setTasks]=useState([]);const[filter,setFilter]=useState('all');const[showForm,setShowForm]=useState(false);const[editingTask,setEditingTask]=useState(null);const[isLoading,setIsLoading]=useState(true);// Load data from localStorage on app initialization\nuseEffect(()=>{const loadData=()=>{try{const savedUser=getFromStorage(STORAGE_KEYS.USER);const savedTasks=getFromStorage(STORAGE_KEYS.TASKS);if(savedUser){setUser(savedUser);}if(savedTasks&&Array.isArray(savedTasks)){setTasks(savedTasks);}}catch(error){console.error('Error loading data:',error);}finally{setIsLoading(false);}};loadData();},[]);// Save tasks to localStorage whenever tasks change\nuseEffect(()=>{if(!isLoading){saveToStorage(STORAGE_KEYS.TASKS,tasks);}},[tasks,isLoading]);// Handle user login\nconst handleLogin=username=>{const userData={username,loginTime:new Date().toISOString()};setUser(userData);saveToStorage(STORAGE_KEYS.USER,userData);};// Handle user logout\nconst handleLogout=()=>{setUser(null);saveToStorage(STORAGE_KEYS.USER,null);};// Add new task\nconst addTask=taskData=>{const newTask={id:Date.now()+Math.random(),...taskData,completed:false,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};setTasks(prev=>[newTask,...prev]);setShowForm(false);};// Update existing task\nconst updateTask=(taskId,updatedData)=>{setTasks(prev=>prev.map(task=>task.id===taskId?{...task,...updatedData,updatedAt:new Date().toISOString()}:task));setEditingTask(null);};// Delete task\nconst deleteTask=taskId=>{setTasks(prev=>prev.filter(task=>task.id!==taskId));};// Toggle task completion\nconst toggleComplete=taskId=>{setTasks(prev=>prev.map(task=>task.id===taskId?{...task,completed:!task.completed,updatedAt:new Date().toISOString()}:task));};// Handle editing task\nconst handleEditTask=task=>{setEditingTask(task);setShowForm(false);};// Handle canceling forms\nconst handleCancelForm=()=>{setShowForm(false);setEditingTask(null);};// Filter tasks based on current filter\nconst filteredTasks=tasks.filter(task=>{switch(filter){case'completed':return task.completed;case'pending':return!task.completed;default:return true;}});// Calculate task counts\nconst taskCounts={all:tasks.length,completed:tasks.filter(t=>t.completed).length,pending:tasks.filter(t=>!t.completed).length};// Calculate progress percentage\nconst progressPercentage=tasks.length>0?Math.round(taskCounts.completed/tasks.length*100):0;// Show loading screen\nif(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Loading your workspace...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Getting everything ready for you\"})]});}// Show login if no user\nif(!user){return/*#__PURE__*/_jsx(Login,{onLogin:handleLogin});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TaskFlow Pro\"}),/*#__PURE__*/_jsx(\"span\",{className:\"app-subtitle\",children:\"Professional Task Management\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"welcome-text\",children:[\"Welcome back, \",/*#__PURE__*/_jsx(\"strong\",{children:user.username})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-btn\",children:\"Logout\"})]})})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-card\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Complete your daily tasks!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Stay organized and boost your productivity. Keep track of your progress and get things done efficiently.\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowForm(!showForm);setEditingTask(null);},className:`add-task-btn ${showForm?'active':''}`,children:showForm?'Cancel':'Add New Task'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Quick Stats\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:taskCounts.all}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Tasks\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:taskCounts.pending}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"In Progress\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:taskCounts.completed}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-number\",children:[progressPercentage,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Success Rate\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-card\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[progressPercentage,\"% Tasks Completed Today\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-circle\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"120\",height:\"120\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"progress-bg\",cx:\"60\",cy:\"60\",r:\"52\"}),/*#__PURE__*/_jsx(\"circle\",{className:\"progress-fill\",cx:\"60\",cy:\"60\",r:\"52\",strokeDasharray:`${2*Math.PI*52}`,strokeDashoffset:`${2*Math.PI*52*(1-progressPercentage/100)}`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-text\",children:[progressPercentage,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-label\",children:\"Keep going! You're doing great.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-filters\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Filter Tasks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-tabs\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setFilter('all'),className:`filter-tab ${filter==='all'?'active':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-left\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"filter-icon\",children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-label\",children:\"All Tasks\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-count\",children:taskCounts.all})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setFilter('pending'),className:`filter-tab ${filter==='pending'?'active':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-left\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"filter-icon\",children:\"\\u26A1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-label\",children:\"In Progress\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-count\",children:taskCounts.pending})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setFilter('completed'),className:`filter-tab ${filter==='completed'?'active':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-left\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"filter-icon\",children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-label\",children:\"Completed\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"filter-count\",children:taskCounts.completed})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tasks-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tasks-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Tasks\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"tasks-count\",children:[filteredTasks.length,\" \",filter==='all'?'total':filter,\" tasks\"]})]}),/*#__PURE__*/_jsx(TaskList,{tasks:filteredTasks,onToggleComplete:toggleComplete,onEdit:handleEditTask,onDelete:deleteTask,currentFilter:filter})]})]}),showForm&&/*#__PURE__*/_jsx(TaskForm,{onSubmit:addTask,onCancel:handleCancelForm}),editingTask&&/*#__PURE__*/_jsx(TaskForm,{task:editingTask,onSubmit:data=>updateTask(editingTask.id,data),onCancel:handleCancelForm,isEditing:true})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"app-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\" 2024 TaskFlow Pro - Designed for productivity excellence\"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Login","TaskList","TaskForm","getFromStorage","saveToStorage","STORAGE_KEYS","jsx","_jsx","jsxs","_jsxs","App","user","setUser","tasks","setTasks","filter","setFilter","showForm","setShowForm","editingTask","setEditingTask","isLoading","setIsLoading","loadData","savedUser","USER","savedTasks","TASKS","Array","isArray","error","console","handleLogin","username","userData","loginTime","Date","toISOString","handleLogout","addTask","taskData","newTask","id","now","Math","random","completed","createdAt","updatedAt","prev","updateTask","taskId","updatedData","map","task","deleteTask","toggleComplete","handleEditTask","handleCancelForm","filteredTasks","taskCounts","all","length","t","pending","progressPercentage","round","className","children","onLogin","onClick","width","height","cx","cy","r","strokeDasharray","PI","strokeDashoffset","onToggleComplete","onEdit","onDelete","currentFilter","onSubmit","onCancel","data","isEditing"],"sources":["C:/Users/Lenovo/Desktop/task-tracker/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Login from './components/Login';\r\nimport TaskList from './components/TaskList';\r\nimport TaskForm from './components/TaskForm';\r\nimport {getFromStorage, saveToStorage, STORAGE_KEYS} from './utils/localStorage';\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filter, setFilter] = useState('all');\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [editingTask, setEditingTask] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Load data from localStorage on app initialization\r\n    useEffect(() => {\r\n        const loadData = () => {\r\n            try {\r\n                const savedUser = getFromStorage(STORAGE_KEYS.USER);\r\n                const savedTasks = getFromStorage(STORAGE_KEYS.TASKS);\r\n\r\n                if (savedUser) {\r\n                    setUser(savedUser);\r\n                }\r\n\r\n                if (savedTasks && Array.isArray(savedTasks)) {\r\n                    setTasks(savedTasks);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading data:', error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    }, []);\r\n\r\n    // Save tasks to localStorage whenever tasks change\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            saveToStorage(STORAGE_KEYS.TASKS, tasks);\r\n        }\r\n    }, [tasks, isLoading]);\r\n\r\n    // Handle user login\r\n    const handleLogin = (username) => {\r\n        const userData = {\r\n            username,\r\n            loginTime: new Date().toISOString()\r\n        };\r\n        setUser(userData);\r\n        saveToStorage(STORAGE_KEYS.USER, userData);\r\n    };\r\n\r\n    // Handle user logout\r\n    const handleLogout = () => {\r\n        setUser(null);\r\n        saveToStorage(STORAGE_KEYS.USER, null);\r\n    };\r\n\r\n    // Add new task\r\n    const addTask = (taskData) => {\r\n        const newTask = {\r\n            id: Date.now() + Math.random(),\r\n            ...taskData,\r\n            completed: false,\r\n            createdAt: new Date().toISOString(),\r\n            updatedAt: new Date().toISOString()\r\n        };\r\n\r\n        setTasks(prev => [newTask, ...prev]);\r\n        setShowForm(false);\r\n    };\r\n\r\n    // Update existing task\r\n    const updateTask = (taskId, updatedData) => {\r\n        setTasks(prev => prev.map(task =>\r\n            task.id === taskId\r\n                ? {\r\n                    ...task,\r\n                    ...updatedData,\r\n                    updatedAt: new Date().toISOString()\r\n                }\r\n                : task\r\n        ));\r\n        setEditingTask(null);\r\n    };\r\n\r\n    // Delete task\r\n    const deleteTask = (taskId) => {\r\n        setTasks(prev => prev.filter(task => task.id !== taskId));\r\n    };\r\n\r\n    // Toggle task completion\r\n    const toggleComplete = (taskId) => {\r\n        setTasks(prev => prev.map(task =>\r\n            task.id === taskId\r\n                ? {\r\n                    ...task,\r\n                    completed: !task.completed,\r\n                    updatedAt: new Date().toISOString()\r\n                }\r\n                : task\r\n        ));\r\n    };\r\n\r\n    // Handle editing task\r\n    const handleEditTask = (task) => {\r\n        setEditingTask(task);\r\n        setShowForm(false);\r\n    };\r\n\r\n    // Handle canceling forms\r\n    const handleCancelForm = () => {\r\n        setShowForm(false);\r\n        setEditingTask(null);\r\n    };\r\n\r\n    // Filter tasks based on current filter\r\n    const filteredTasks = tasks.filter(task => {\r\n        switch (filter) {\r\n            case 'completed':\r\n                return task.completed;\r\n            case 'pending':\r\n                return !task.completed;\r\n            default:\r\n                return true;\r\n        }\r\n    });\r\n\r\n    // Calculate task counts\r\n    const taskCounts = {\r\n        all: tasks.length,\r\n        completed: tasks.filter(t => t.completed).length,\r\n        pending: tasks.filter(t => !t.completed).length\r\n    };\r\n\r\n    // Calculate progress percentage\r\n    const progressPercentage = tasks.length > 0 ? Math.round((taskCounts.completed / tasks.length) * 100) : 0;\r\n\r\n    // Show loading screen\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <h2>Loading your workspace...</h2>\r\n                <p>Getting everything ready for you</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show login if no user\r\n    if (!user) {\r\n        return <Login onLogin={handleLogin}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <header className=\"app-header\">\r\n                <div className=\"header-content\">\r\n                    <div className=\"header-left\">\r\n                        <h1>TaskFlow Pro</h1>\r\n                        <span className=\"app-subtitle\">Professional Task Management</span>\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                        <div className=\"user-info\">\r\n                            <span className=\"welcome-text\">\r\n                                Welcome back, <strong>{user.username}</strong>\r\n                            </span>\r\n                            <button onClick={handleLogout} className=\"logout-btn\">\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"app-main\">\r\n                <div className=\"main-content\">\r\n                    {/* Left Dashboard Section */}\r\n                    <div className=\"dashboard-left\">\r\n                        {/* Welcome Card */}\r\n                        <div className=\"welcome-card\">\r\n                            <div>\r\n                                <h2>Complete your daily tasks!</h2>\r\n                                <p>Stay organized and boost your productivity. Keep track of your progress and get\r\n                                    things done efficiently.</p>\r\n                            </div>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowForm(!showForm);\r\n                                    setEditingTask(null);\r\n                                }}\r\n                                className={`add-task-btn ${showForm ? 'active' : ''}`}\r\n                            >\r\n                                {showForm ? 'Cancel' : 'Add New Task'}\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Quick Stats */}\r\n                        <div className=\"quick-stats\">\r\n                            <h3>Quick Stats</h3>\r\n                            <div className=\"stats-grid\">\r\n                                <div className=\"stat-item\">\r\n                                    <div className=\"stat-number\">{taskCounts.all}</div>\r\n                                    <div className=\"stat-label\">Total Tasks</div>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <div className=\"stat-number\">{taskCounts.pending}</div>\r\n                                    <div className=\"stat-label\">In Progress</div>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <div className=\"stat-number\">{taskCounts.completed}</div>\r\n                                    <div className=\"stat-label\">Completed</div>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <div className=\"stat-number\">{progressPercentage}%</div>\r\n                                    <div className=\"stat-label\">Success Rate</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Right Dashboard Section */}\r\n                    <div className=\"dashboard-right\">\r\n                        {/* Progress Card */}\r\n                        <div className=\"progress-card\">\r\n                            <h3>{progressPercentage}% Tasks Completed Today</h3>\r\n                            <div className=\"progress-circle\">\r\n                                <svg width=\"120\" height=\"120\">\r\n                                    <circle\r\n                                        className=\"progress-bg\"\r\n                                        cx=\"60\"\r\n                                        cy=\"60\"\r\n                                        r=\"52\"\r\n                                    />\r\n                                    <circle\r\n                                        className=\"progress-fill\"\r\n                                        cx=\"60\"\r\n                                        cy=\"60\"\r\n                                        r=\"52\"\r\n                                        strokeDasharray={`${2 * Math.PI * 52}`}\r\n                                        strokeDashoffset={`${2 * Math.PI * 52 * (1 - progressPercentage / 100)}`}\r\n                                    />\r\n                                </svg>\r\n                                <div className=\"progress-text\">{progressPercentage}%</div>\r\n                            </div>\r\n                            <div className=\"progress-label\">\r\n                                Keep going! You're doing great.\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Task Filters */}\r\n                        <div className=\"task-filters\">\r\n                            <h3>Filter Tasks</h3>\r\n                            <div className=\"filter-tabs\">\r\n                                <button\r\n                                    onClick={() => setFilter('all')}\r\n                                    className={`filter-tab ${filter === 'all' ? 'active' : ''}`}\r\n                                >\r\n                                    <div className=\"filter-left\">\r\n                                        <span className=\"filter-icon\">📋</span>\r\n                                        <span className=\"filter-label\">All Tasks</span>\r\n                                    </div>\r\n                                    <span className=\"filter-count\">{taskCounts.all}</span>\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => setFilter('pending')}\r\n                                    className={`filter-tab ${filter === 'pending' ? 'active' : ''}`}\r\n                                >\r\n                                    <div className=\"filter-left\">\r\n                                        <span className=\"filter-icon\">⚡</span>\r\n                                        <span className=\"filter-label\">In Progress</span>\r\n                                    </div>\r\n                                    <span className=\"filter-count\">{taskCounts.pending}</span>\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => setFilter('completed')}\r\n                                    className={`filter-tab ${filter === 'completed' ? 'active' : ''}`}\r\n                                >\r\n                                    <div className=\"filter-left\">\r\n                                        <span className=\"filter-icon\">✅</span>\r\n                                        <span className=\"filter-label\">Completed</span>\r\n                                    </div>\r\n                                    <span className=\"filter-count\">{taskCounts.completed}</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Tasks Section */}\r\n                    <div className=\"tasks-section\">\r\n                        <div className=\"tasks-header\">\r\n                            <h2>Your Tasks</h2>\r\n                            <span className=\"tasks-count\">\r\n                                {filteredTasks.length} {filter === 'all' ? 'total' : filter} tasks\r\n                            </span>\r\n                        </div>\r\n\r\n                        {/* Task List */}\r\n                        <TaskList\r\n                            tasks={filteredTasks}\r\n                            onToggleComplete={toggleComplete}\r\n                            onEdit={handleEditTask}\r\n                            onDelete={deleteTask}\r\n                            currentFilter={filter}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Add Task Form */}\r\n                {showForm && (\r\n                    <TaskForm\r\n                        onSubmit={addTask}\r\n                        onCancel={handleCancelForm}\r\n                    />\r\n                )}\r\n\r\n                {/* Edit Task Form */}\r\n                {editingTask && (\r\n                    <TaskForm\r\n                        task={editingTask}\r\n                        onSubmit={(data) => updateTask(editingTask.id, data)}\r\n                        onCancel={handleCancelForm}\r\n                        isEditing={true}\r\n                    />\r\n                )}\r\n            </main>\r\n\r\n            <footer className=\"app-footer\">\r\n                <p> 2024 TaskFlow Pro - Designed for productivity excellence</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}