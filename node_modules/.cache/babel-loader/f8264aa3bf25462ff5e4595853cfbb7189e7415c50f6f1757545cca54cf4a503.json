{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Frontend Developer\\\\task-tracker\\\\src\\\\components\\\\TaskFilter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskFilter = ({\n  currentFilter,\n  onFilterChange,\n  taskCounts\n}) => {\n  const filters = [{\n    key: 'all',\n    label: 'All Tasks',\n    count: taskCounts.all,\n    icon: 'ðŸŽ¯'\n  }, {\n    key: 'pending',\n    label: 'In Progress',\n    count: taskCounts.pending,\n    icon: 'âš¡'\n  }, {\n    key: 'completed',\n    label: 'Completed',\n    count: taskCounts.completed,\n    icon: 'ðŸŽ‰'\n  }];\n  const getFilterDescription = () => {\n    const count = taskCounts[currentFilter];\n    const taskWord = count === 1 ? 'task' : 'tasks';\n    switch (currentFilter) {\n      case 'all':\n        return `${count} total ${taskWord} in your workspace`;\n      case 'pending':\n        return `${count} ${taskWord} waiting for your attention`;\n      case 'completed':\n        return `${count} ${taskWord} successfully completed`;\n      default:\n        return `${count} ${taskWord}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-tabs\",\n      children: filters.map(filter => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onFilterChange(filter.key),\n        className: `filter-tab ${currentFilter === filter.key ? 'active' : ''}`,\n        \"aria-pressed\": currentFilter === filter.key,\n        title: `View ${filter.label.toLowerCase()} (${filter.count} tasks)`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-icon\",\n          children: filter.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-label\",\n          children: filter.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: filter.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, filter.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"summary-text\",\n        children: [\"\\u2728 \", getFilterDescription()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskFilter;\nexport default TaskFilter;\nvar _c;\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskFilter","currentFilter","onFilterChange","taskCounts","filters","key","label","count","all","icon","pending","completed","getFilterDescription","taskWord","className","children","map","filter","onClick","title","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Frontend Developer/task-tracker/src/components/TaskFilter.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst TaskFilter = ({currentFilter, onFilterChange, taskCounts}) => {\r\n    const filters = [\r\n        {\r\n            key: 'all',\r\n            label: 'All Tasks',\r\n            count: taskCounts.all,\r\n            icon: 'ðŸŽ¯'\r\n        },\r\n        {\r\n            key: 'pending',\r\n            label: 'In Progress',\r\n            count: taskCounts.pending,\r\n            icon: 'âš¡'\r\n        },\r\n        {\r\n            key: 'completed',\r\n            label: 'Completed',\r\n            count: taskCounts.completed,\r\n            icon: 'ðŸŽ‰'\r\n        }\r\n    ];\r\n\r\n    const getFilterDescription = () => {\r\n        const count = taskCounts[currentFilter];\r\n        const taskWord = count === 1 ? 'task' : 'tasks';\r\n\r\n        switch (currentFilter) {\r\n            case 'all':\r\n                return `${count} total ${taskWord} in your workspace`;\r\n            case 'pending':\r\n                return `${count} ${taskWord} waiting for your attention`;\r\n            case 'completed':\r\n                return `${count} ${taskWord} successfully completed`;\r\n            default:\r\n                return `${count} ${taskWord}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-filter\">\r\n            <div className=\"filter-tabs\">\r\n                {filters.map(filter => (\r\n                    <button\r\n                        key={filter.key}\r\n                        onClick={() => onFilterChange(filter.key)}\r\n                        className={`filter-tab ${currentFilter === filter.key ? 'active' : ''}`}\r\n                        aria-pressed={currentFilter === filter.key}\r\n                        title={`View ${filter.label.toLowerCase()} (${filter.count} tasks)`}\r\n                    >\r\n                        <span className=\"filter-icon\">{filter.icon}</span>\r\n                        <span className=\"filter-label\">{filter.label}</span>\r\n                        <span className=\"filter-count\">{filter.count}</span>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"filter-summary\">\r\n                <span className=\"summary-text\">\r\n                    âœ¨ {getFilterDescription()}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}